package inc.plo.ha.haplo6;

import android.content.Intent;
import android.media.MediaPlayer;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.CompoundButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Switch;
import android.widget.Toast;
import android.widget.ToggleButton;

import java.util.Arrays;

public class epistasis3 extends AppCompatActivity {


/**
*Declare integers that are used to cycle through buttons
*i.e. click b1 arrow button once, text on button becomes "B" and b1x = 1;
*next click will cause button text to become "C" and b1x = 2;
**/
    private int b1x = 0;
    private int b2x = 0;
    private int b3x = 0;
    private int b4x = 0;
    private int b5x = 0;
    private Button back;

/**
*sequence stores values generated by buttons from 0-4
*e.g. clicking button b3 twice will cause sequence[2] = 2;
*this is used to compare to the winning sequence, which has the proper values for each button
**/
    int[] sequence = new int[5];
/**
*switches has similar function
*each index of switches corresponds to a switch
*switches is later converted to a string value that is compared to the color arrays below
*this will determine the color of the textview flower
**/    
    int[] switches = new int[5];
/**
*Each color array below correponds to the gene pathway associated with a color phenotype
*They are converted to string to be compared to the switches array
*whatever color array switches is equal to will become the color phenotype of the flower (imageview)
**/    
    private int[] blue = {1, 1, 1, 0, 0};
    String theBlue = Arrays.toString(blue);
    private int[] red = {1, 0, 1, 1, 0};
    String theRed = Arrays.toString(red);
    private int[] yellow = {1, 0, 1, 0, 1};
    String theYellow = Arrays.toString(yellow);
    private int[] orange = {1, 0, 1, 1, 1};
    String theOrange = Arrays.toString(orange);
    private int[] purple = {1, 1, 1, 1, 0};
    String thePurple = Arrays.toString(purple);
    private int[] green = {1, 1, 1, 0, 1};
    String theGreen = Arrays.toString(green);
    private int[] brown = {1, 1, 1, 1, 1};
    String theBrown = Arrays.toString(brown);
    //grey if [0] == 0, blue if [0] == 1, [1] == 1, [2] ==0


/**
*winning and winning2 are the 2 possible correct pathways
*if sequence is equal to one of these arrays the user is correct 
**/
    int[] winning = {3,1,2,0,4};
    int[] winning2 = {3,1,2,4,0};

/**
*each button corresponds to an arrow in the gene pathway
*gun sound is activated when the button is pressed
*each time the button is pressed, the associates integer listed at the top of the page
*(e.g. bx1 for b1) is incremented by one, then returns to 0
*the value corresponds to a letter on the gene pathway
*each of the 5 buttons functions in the same way, but corresponds to a different
*element of the sequence array and has a different incremental integer
**/    
    public void b1(View v) {
        Button b1 = (Button) findViewById(R.id.b1);
        MediaPlayer mp = MediaPlayer.create(getApplicationContext(), R.raw.gun);
        mp.start();
        if (b1x == 0) {
            b1.setText("B");
            sequence[0] = 1;
            b1x = 1;
        } else if (b1x == 1) {
            b1.setText("C");
            sequence[0] = 2;
            b1x = 2;
        } else if (b1x == 2) {
            b1.setText("D");
            sequence[0] = 3;
            b1x = 3;
        } else if (b1x == 3) {
            b1.setText("E");
            sequence[0] = 4;
            b1x = 4;
        } else if (b1x == 4) {
            b1.setText("A");
            sequence[0] = 0;
            b1x = 0;
        }
    }

    public void b2(View v) {
        Button b2 = (Button) findViewById(R.id.b2);
        MediaPlayer mp = MediaPlayer.create(getApplicationContext(), R.raw.gun);
        mp.start();
        if (b2x == 0) {
            b2.setText("B");
            sequence[1] = 1;
            b2x = 1;
        } else if (b2x == 1) {
            b2.setText("C");
            sequence[1] = 2;
            b2x = 2;
        } else if (b2x == 2) {
            b2.setText("D");
            sequence[1] = 3;
            b2x = 3;
        } else if (b2x == 3) {
            b2.setText("E");
            sequence[1] = 4;
            b2x = 4;
        } else if (b2x == 4) {
            b2.setText("A");
            sequence[1] = 0;
            b2x = 0;
        }
    }

    public void b3(View v) {
        Button b3 = (Button) findViewById(R.id.b3);
        MediaPlayer mp = MediaPlayer.create(getApplicationContext(), R.raw.gun);
        mp.start();
        if (b3x == 0) {
            b3.setText("B");
            sequence[2] = 1;
            b3x = 1;
        } else if (b3x == 1) {
            b3.setText("C");
            sequence[2] = 2;
            b3x = 2;
        } else if (b3x == 2) {
            b3.setText("D");
            sequence[2] = 3;
            b3x = 3;
        } else if (b3x == 3) {
            b3.setText("E");
            sequence[2] = 4;
            b3x = 4;
        } else if (b3x == 4) {
            b3.setText("A");
            sequence[2] = 0;
            b3x = 0;
        }
    }

    public void b4(View v) {
        Button b4 = (Button) findViewById(R.id.b4);
        MediaPlayer mp = MediaPlayer.create(getApplicationContext(), R.raw.gun);
        mp.start();
        if (b4x == 0) {
            b4.setText("B");
            sequence[3] = 1;
            b4x = 1;
        } else if (b4x == 1) {
            b4.setText("C");
            sequence[3] = 2;
            b4x = 2;
        } else if (b4x == 2) {
            b4.setText("D");
            sequence[3] = 3;
            b4x = 3;
        } else if (b4x == 3) {
            b4.setText("E");
            sequence[3] = 4;
            b4x = 4;
        } else if (b4x == 4) {
            b4.setText("A");
            sequence[3] = 0;
            b4x = 0;
        }
    }

    public void b5(View v) {
        Button b5 = (Button) findViewById(R.id.b5);
        MediaPlayer mp = MediaPlayer.create(getApplicationContext(), R.raw.gun);
        mp.start();
        if (b5x == 0) {
            b5.setText("B");
            sequence[4] = 1;
            b5x = 1;
        } else if (b5x == 1) {
            b5.setText("C");
            sequence[4] = 2;
            b5x = 2;
        } else if (b5x == 2) {
            b5.setText("D");
            sequence[4] = 3;
            b5x = 3;
        } else if (b5x == 3) {
            b5.setText("E");
            sequence[4] = 4;
            b5x = 4;
        } else if (b5x == 4) {
            b5.setText("A");
            sequence[4] = 0;
            b5x = 0;
        }
    }

/**
*The colorChange methods is activated each time a switch is pressed
*The methods changes the color of a flower imageView (pic)
*The value associates with the array 'switch' (re: each element corresponds to a switch)
*This array is converted to a string which is compared to the color array.tostrings()
*equality changes the flower colour
*if the first or second element of the array is 0, the flower is automatically grey
**/
    public void colorChange(){
        ImageView flower = (ImageView) findViewById(R.id.pic);
        String theSwitch = Arrays.toString(switches);
        if (switches[0] == 0) {
            flower.setImageResource(R.drawable.greyflower);
        } else if (theSwitch.equals(theRed)) {
            flower.setImageResource(R.drawable.redflower);
        } else if (theSwitch.equals(theBlue)) {
            flower.setImageResource(R.drawable.blueflower);
        } else if (theSwitch.equals(theGreen)) {
            flower.setImageResource(R.drawable.greenflower);
        } else if (theSwitch.equals(theYellow)) {
            flower.setImageResource(R.drawable.yellowflower);
        } else if (theSwitch.equals(theOrange)) {
            flower.setImageResource(R.drawable.orangeflower);
        } else if (theSwitch.equals(theBrown)) {
            flower.setImageResource(R.drawable.brownflower);
        } else if (theSwitch.equals(thePurple)) {
            flower.setImageResource(R.drawable.purpleflower);
        } else {
            if(switches[1]==0){
                flower.setImageResource(R.drawable.greyflower);
            }else{
                flower.setImageResource(R.drawable.blueflower);
            }
        }
    }

/**
*The info button is a toast that provides the instructions for the game
**/

    public void info (View view) {
        Toast imageToast = new Toast(getBaseContext());
        LinearLayout toastLayout = new LinearLayout(getBaseContext());
        toastLayout.setOrientation(LinearLayout.HORIZONTAL);
        ImageView image = new ImageView(getBaseContext());
        image.setImageResource(R.drawable.colorcombo2);
        toastLayout.addView(image);
        imageToast.setView(toastLayout);
        imageToast.setDuration(Toast.LENGTH_LONG);
        imageToast.show();
    }

/**
*The refresh button resets the activity
**/
    public void refresh (View view){
        MediaPlayer mp = MediaPlayer.create(getApplicationContext(), R.raw.airplane);
        mp.start();
        onRestart();
    }
    @Override
    protected void onRestart() {

        super.onRestart();
        Intent i = new Intent(epistasis3.this, epistasis3.class);
        startActivity(i);
        finish();
    }

/**
*When the submit button is pressed, the sequence and winning arrays are made toString
*They are compared to each other, match is "You got it!", else "Nope!"
**/
    public void submit (View view){
        String theSequence = Arrays.toString(sequence);
        String theWinning = Arrays.toString(winning);
        String theWinning2 = Arrays.toString(winning2);
        if((theSequence.equals(theWinning)) | (theSequence.equals(theWinning2))){
            Toast.makeText(this, "You got it!", Toast.LENGTH_LONG).show();
            MediaPlayer mp = MediaPlayer.create(getApplicationContext(), R.raw.tada);
            mp.start();
        }else{
            Toast.makeText(this, "Nope, try again!" +theSequence+theWinning, Toast.LENGTH_LONG).show();
        }
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_epistasis3);

/**
*Each switch is a boolean value (on/off) corresponding to a gene in the pathway being on/off
*the on switch will place a value of '1' in its corresponding element within the switches array
*(e.g. button aa is switches[3], button bb is switches[1])
*the color change method is called and the corresponding switch sequence will change the color 
**/

        Switch aa = (Switch) findViewById(R.id.dd);
        aa.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (isChecked) {
                    switches[3] = 1;
                } else {
                    switches[3] = 0;
                }colorChange();
            }
        });
        Switch bb = (Switch) findViewById(R.id.bb);
        bb.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (isChecked) {
                    switches[1] = 1;
                } else {
                    switches[1] = 0;
                }colorChange();
            }
        });
        Switch cc = (Switch) findViewById(R.id.cc);
        cc.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (isChecked) {
                    switches[2] = 1;
                } else {
                    switches[2] = 0;
                }colorChange();
            }
        });
        Switch dd = (Switch) findViewById(R.id.aa);
        dd.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (isChecked) {
                    switches[0] = 1;
                } else {
                    switches[0] = 0;
                }colorChange();
            }
        });
        Switch ee = (Switch) findViewById(R.id.ee);
        ee.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (isChecked) {
                    switches[4] = 1;
                } else {
                    switches[4] = 0;
                }colorChange();
            }
        });
/**
*The back button will return to the epistasis main activity
**/        

        back = (Button) findViewById(R.id.back);
        back.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                finish();
            }
        });
    }
 }

